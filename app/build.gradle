apply plugin: "com.android.application"
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs.kotlin'

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.2'

    defaultConfig {
        applicationId "me.yeojoy.hancahouse"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode houseVersionCode
        versionName houseVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            resValue "string", "app_name", "HancaHouse"
        }

        debug {
            resValue "string", "app_name", "Hanca " + (System.getenv("BUILD_NUMBER") ?: "IDE")
        }
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    // work-runtime-ktx 2.1.0 and above now requires Java 8
    kotlinOptions {
        jvmTarget = "1.8"
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "HancaHouse-${variant.buildType.name}-${variant.versionCode}-${variant.versionName}.apk"
        }
    }
}

dependencies {
    kapt "androidx.room:room-compiler:$rootProject.roomVersion"
    kapt "com.github.bumptech.glide:compiler:$rootProject.glideVersion"

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:1.1.0"
    implementation "androidx.recyclerview:recyclerview:1.0.0"
    implementation "com.android.support.constraint:constraint-layout:1.1.3"
    testImplementation "junit:junit:4.12"
    androidTestImplementation "androidx.test:runner:1.2.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.2.0"
    implementation 'com.google.android.material:material:1.0.0'
    // Room components
    implementation "androidx.room:room-runtime:$rootProject.roomVersion"
    implementation "androidx.room:room-ktx:$rootProject.roomVersion"

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifecycleVersion"
    // html parser
    implementation "org.jsoup:jsoup:1.10.2"
    // glide
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"

    implementation "com.google.code.gson:gson:2.8.5"
}

task upload(type: Exec) {
    def DROPBOX_AUTHORIZATION = System.getenv("DROPBOX_AUTHORIZATION") ?: ""
    println("DROPBOX_AUTHORIZATION: " + DROPBOX_AUTHORIZATION)

    if (DROPBOX_AUTHORIZATION == null || DROPBOX_AUTHORIZATION == "") {
        println("DROPBOX authorization is not valid.")
        return
    }

    def API_URL = "https://content.dropboxapi.com/2/files/upload"
    def fileName = "HancaHouse-debug-${rootProject.houseVersionCode}-${rootProject.houseVersionName}.apk"
    def destFilePath = "/hanca/${rootProject.houseVersionCode}/${fileName}"
    def sourceFilePath = "@app/build/outputs/apk/debug/${fileName}"

    def HEADER_AUTHORIZATION = "Authorization: Bearer ${DROPBOX_AUTHORIZATION}"
    def HEADER_ARGS = "Dropbox-API-Arg: {\"path\": \"${destFilePath}\", \"mode\": \"overwrite\",\"autorename\": true,\"mute\": false,\"strict_conflict\": false}"
    def HEADER_CONTENT_TYPE = "Content-Type: application/octet-stream"

    executable "/bin/bash"

    def COMMANDS = ["curl", "-X", "POST", API_URL, "--header", HEADER_AUTHORIZATION,
            "--header", HEADER_ARGS, "--header", HEADER_CONTENT_TYPE, "--data-binary",
            sourceFilePath]
    def text = COMMANDS.execute().text

    println(text)
}
