apply plugin: "com.android.application"

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "me.yeojoy.hancahouse"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode houseVersionCode
        versionName houseVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            resValue "string", "app_name", "HancaHouse"
        }

        debug {
            resValue "string", "app_name", "Hanca " + (System.getenv("BUILD_NUMBER") ?: "IDE")
        }
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

//    android.applicationVariants.all { variant ->
//        variant.outputs.all {
//            outputFileName = "HancaHouse-${variant.buildType.name}-${variant.versionCode}-${variant.versionName}.apk"
//        }
//    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    // Room components
    implementation "android.arch.persistence.room:runtime:$rootProject.roomVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$rootProject.roomVersion"
    androidTestImplementation "android.arch.persistence.room:testing:$rootProject.roomVersion"
    // Lifecycle components
    implementation "android.arch.lifecycle:extensions:$rootProject.archLifecycleVersion"
    annotationProcessor "android.arch.lifecycle:compiler:$rootProject.archLifecycleVersion"
    // html parser
    implementation 'org.jsoup:jsoup:1.10.2'
    // glide
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'

    implementation 'com.google.code.gson:gson:2.8.5'
}

task upload(type: Exec) {
    def API_URL = "https://content.dropboxapi.com/2/files/upload"
    def fileName = "HancaHouse-debug-${rootProject.houseVersionCode}-${rootProject.houseVersionName}.apk"
//    def fileName = "app-debug.apk"
    def destFilePath = "/hanca/${rootProject.houseVersionCode}/${fileName}"
    def sourceFilePath = "@app/build/outputs/apk/debug/${fileName}"

    def HEADER_AUTHORIZATION = "Authorization: Bearer ${DROPBOX_AUTORIONZATION}"
    def HEADER_ARGS = "Dropbox-API-Arg: {\"path\": \"${destFilePath}\", \"mode\": \"add\",\"autorename\": true,\"mute\": false,\"strict_conflict\": false}"
    def HEADER_CONTENT_TYPE = "Content-Type: application/octet-stream"

    println(API_URL)
    println(fileName)
    println(destFilePath)
    println(sourceFilePath)
    println(HEADER_AUTHORIZATION)
    println(HEADER_ARGS)
    println(HEADER_CONTENT_TYPE)

    executable "/bin/sh"

    args "-c", "curl -X POST ${API_URL} " +
            "--header \"${HEADER_AUTHORIZATION}\" " +
            "--header \"${HEADER_ARGS}\" " +
            "--header \"${HEADER_CONTENT_TYPE}\" " +
            "--data-binary ${sourceFilePath}"
}
